{::pagebreak :/}
 
## Ch 1.1.4 建立 create 這個 action

在 `app/controllers/groups_controller.rb` 加入 `create` 這個 action

~~~~~~~~
  def create
    @group = Group.new(params[:group])
    @group.save

    redirect_to groups_path
  end



  private


  def group_params
    params.require(:group).permit(:title, :description)
  end

~~~~~~~~

不過此時，我們發現好像少了一種實際狀況？如果一個 Group 沒有 title，應該算是不合法的 group 吧？

我們應該要限制沒有輸入 title 的 group，必須要退回到 `new` 這個表單。


修改 `app/models/group.rb`，限制 group 一定要有標題

~~~~~~~~

class Group < ActiveRecord::Base

  validates :title, :presence => true
  
end

~~~~~~~~

同時修改 `app/controllers/groups_controller.rb` 中 `create` 這個 action

改成以下內容

~~~~~~~~

  def create
    @group = Group.new(params[:group])

    if @group.save
      redirect_to groups_path
    else
      render :new
    end
  end

~~~~~~~~



{::pagebreak :/}


### 解說

這邊要搭配 `app/views/groups/new.html.erb` 這個 view 並列一起看。

~~~~~~~~


<div class="span12">

 <%= simple_form_for @group  do |f| %>
    <%= f.input :title, :input_html => { :class => "input-xxlarge"} %>
    <%= f.input :description, :input_html => { :class => "input-xxlarge"} %>
    
    <div class="form-actions">   
       <%= f.submit "Submit", :disable_with => 'Submiting...', :class => "btn btn-primary" %>
    </div>
  <% end %>

</div>

~~~~~~~~


在 RESTful Rails 的寫法中，對 `groups_path` 丟 POST 就是對應到 create 的動作。而 Rails 在設計上，form 是綁 model 的，因此整個 form 的內容會被包成一個 hash，在這裡就是 params[:group]。create action 初始一個 object ，並把 params[:group] 整包塞進這個 object 裡。如果 @group 能夠成功的儲存，就「重導」到 index action ，失敗則「退回」到 new action 。
